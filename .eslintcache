[{"/home/jmauwerb/projects/lbdserver/mainbot/src/index.tsx":"1","/home/jmauwerb/projects/lbdserver/mainbot/src/App.tsx":"2","/home/jmauwerb/projects/lbdserver/mainbot/src/context/index.tsx":"3","/home/jmauwerb/projects/lbdserver/mainbot/src/routes/index.tsx":"4","/home/jmauwerb/projects/lbdserver/mainbot/src/styles/index.tsx":"5","/home/jmauwerb/projects/lbdserver/mainbot/src/styles/theme.tsx":"6","/home/jmauwerb/projects/lbdserver/mainbot/src/styles/useStyles.tsx":"7","/home/jmauwerb/projects/lbdserver/mainbot/src/routes/Routes.tsx":"8","/home/jmauwerb/projects/lbdserver/mainbot/src/pages/index.tsx":"9","/home/jmauwerb/projects/lbdserver/mainbot/src/components/index.tsx":"10","/home/jmauwerb/projects/lbdserver/mainbot/src/pages/Home/index.tsx":"11","/home/jmauwerb/projects/lbdserver/mainbot/src/components/Navbar/index.tsx":"12","/home/jmauwerb/projects/lbdserver/mainbot/src/pages/Project/index.tsx":"13","/home/jmauwerb/projects/lbdserver/mainbot/src/pages/Home/Home.tsx":"14","/home/jmauwerb/projects/lbdserver/mainbot/src/pages/Project/Project.tsx":"15","/home/jmauwerb/projects/lbdserver/mainbot/src/components/Navbar/Navbar.tsx":"16","/home/jmauwerb/projects/lbdserver/mainbot/src/components/ProjectSelection/index.tsx":"17","/home/jmauwerb/projects/lbdserver/mainbot/src/components/ProjectSelection/ProjectSelection.tsx":"18","/home/jmauwerb/projects/lbdserver/mainbot/src/components/ProjectSelection/CardGrid.tsx":"19","/home/jmauwerb/projects/lbdserver/mainbot/src/components/UtilComponents/index.tsx":"20","/home/jmauwerb/projects/lbdserver/mainbot/src/components/ProjectSelection/ProjectCard.tsx":"21","/home/jmauwerb/projects/lbdserver/mainbot/src/components/UtilComponents/Loading.tsx":"22","/home/jmauwerb/projects/lbdserver/mainbot/src/lbdApi/functions/index.tsx":"23","/home/jmauwerb/projects/lbdserver/mainbot/src/lbdApi/functions/lbdApi.tsx":"24"},{"size":197,"mtime":1608140123432,"results":"25","hashOfConfig":"26"},{"size":760,"mtime":1608140123432,"results":"27","hashOfConfig":"26"},{"size":474,"mtime":1608212351712,"results":"28","hashOfConfig":"26"},{"size":52,"mtime":1608140123432,"results":"29","hashOfConfig":"26"},{"size":106,"mtime":1608140123432,"results":"30","hashOfConfig":"26"},{"size":127,"mtime":1608140123432,"results":"31","hashOfConfig":"26"},{"size":3323,"mtime":1608140123432,"results":"32","hashOfConfig":"26"},{"size":494,"mtime":1608140123432,"results":"33","hashOfConfig":"26"},{"size":91,"mtime":1608140123432,"results":"34","hashOfConfig":"26"},{"size":52,"mtime":1608140123432,"results":"35","hashOfConfig":"26"},{"size":46,"mtime":1608140123432,"results":"36","hashOfConfig":"26"},{"size":52,"mtime":1608140123432,"results":"37","hashOfConfig":"26"},{"size":55,"mtime":1608140123432,"results":"38","hashOfConfig":"26"},{"size":379,"mtime":1608140123432,"results":"39","hashOfConfig":"26"},{"size":251,"mtime":1608140123432,"results":"40","hashOfConfig":"26"},{"size":588,"mtime":1608140123432,"results":"41","hashOfConfig":"26"},{"size":82,"mtime":1608140123432,"results":"42","hashOfConfig":"26"},{"size":861,"mtime":1608212361372,"results":"43","hashOfConfig":"26"},{"size":947,"mtime":1608212351712,"results":"44","hashOfConfig":"26"},{"size":49,"mtime":1608140123432,"results":"45","hashOfConfig":"26"},{"size":1823,"mtime":1608212351712,"results":"46","hashOfConfig":"26"},{"size":145,"mtime":1608140123432,"results":"47","hashOfConfig":"26"},{"size":78,"mtime":1608142972359,"results":"48","hashOfConfig":"26"},{"size":1453,"mtime":1608212592541,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"q5nsug",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},"/home/jmauwerb/projects/lbdserver/mainbot/src/index.tsx",[],["101","102"],"/home/jmauwerb/projects/lbdserver/mainbot/src/App.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/context/index.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/routes/index.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/styles/index.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/styles/theme.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/styles/useStyles.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/routes/Routes.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/pages/index.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/components/index.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/pages/Home/index.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/components/Navbar/index.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/pages/Project/index.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/pages/Home/Home.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/pages/Project/Project.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/components/Navbar/Navbar.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/components/ProjectSelection/index.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/components/ProjectSelection/ProjectSelection.tsx",["103","104","105","106","107"],"/home/jmauwerb/projects/lbdserver/mainbot/src/components/ProjectSelection/CardGrid.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/components/UtilComponents/index.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/components/ProjectSelection/ProjectCard.tsx",["108"],"import React, {useContext} from 'react'\nimport {\n    Card,\n    CardContent,\n    Button,\n    Typography\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppContext from '@context'\nimport { ActiveProject, Project } from 'lbdApi/interfaces';\n\ninterface CardProps {\n    project: Project\n    className?: string\n}\n\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    card: {\n        height: 300,\n        width: 200,\n    },\n    title: {\n        fontSize: 14,\n    },\n    button: {\n        position: \"relative\",\n        bottom: 50,\n        left: 20\n    }\n});\n\n\nconst ProjectCard = (props: CardProps) => {\n    const classes = useStyles()\n    const {context, setContext} = useContext(AppContext)\n\n    function activateProject () {\n        const project: ActiveProject = {...props.project, selection: [], acl: }\n        \n        setContext({...context, activeProject: props.project})\n    }\n\n    return (\n        <div className={classes.root}>\n            <Card className={classes.card} variant=\"outlined\">\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        LBDserver Project\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {props.project.metadata[\"rdfs:label\"]}\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"p\">\n                        {props.project.metadata[\"rdfs:comment\"]}\n                    </Typography>\n                </CardContent>\n            </Card>\n            <Button className={classes.button} variant=\"contained\" size=\"small\" color=\"primary\" onClick={activateProject}>Activate</Button>\n\n        </div>\n\n    )\n}\n\nexport default ProjectCard\n","/home/jmauwerb/projects/lbdserver/mainbot/src/components/UtilComponents/Loading.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/lbdApi/functions/index.tsx",[],"/home/jmauwerb/projects/lbdserver/mainbot/src/lbdApi/functions/lbdApi.tsx",["109","110","111","112"],"import { Project } from 'lbdApi/interfaces'\nimport axios from 'axios'\nconst {parse} = require('@frogcat/ttl2jsonld')\n\nfunction createProject() {\n    return new Promise<Project>(async (resolve, reject) => {\n        try {\n            \n        } catch (error) {\n            reject(error)\n        }\n    })\n}\n\nfunction getAllProjects() {\n    return new Promise<Project[]>(async (resolve, reject) => {\n        try {\n            \n        } catch (error) {\n            reject(error)\n        }\n    })\n}\n\n// returns the projects with public accessibility stored locally in the server\nfunction getOpenProjects() {\n    return new Promise<Project[]>(async (resolve, reject) => {\n        try {\n            const {data} = await axios.get(`${process.env.REACT_APP_BACKEND}/lbd/public`)\n            data.projects.forEach((project: Project) => {\n                project[\"metadata\"] = parse(project.metadata)\n            })\n            resolve(data.projects)\n        } catch (error) {\n            reject(error)\n        }\n    })\n}\n\nfunction getProject() {\n    return new Promise<Project>(async (resolve, reject) => {\n        try {\n            \n        } catch (error) {\n            reject(error)\n        }\n    })\n}\n\nfunction deleteProject() {\n    return new Promise<Project>(async (resolve, reject) => {\n        try {\n            \n        } catch (error) {\n            reject(error)\n        }\n    })\n}\n\nexport {\n    getOpenProjects\n}",{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"121","line":1,"column":26,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"122","line":1,"column":38,"nodeType":"119","messageId":"120","endLine":1,"endColumn":47},{"ruleId":"117","severity":1,"message":"123","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":18},{"ruleId":"117","severity":1,"message":"124","line":3,"column":9,"nodeType":"119","messageId":"120","endLine":3,"endColumn":16},{"ruleId":null,"fatal":true,"severity":2,"message":"125","line":42,"column":78},{"ruleId":"117","severity":1,"message":"126","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":23},{"ruleId":"117","severity":1,"message":"127","line":15,"column":10,"nodeType":"119","messageId":"120","endLine":15,"endColumn":24},{"ruleId":"117","severity":1,"message":"128","line":40,"column":10,"nodeType":"119","messageId":"120","endLine":40,"endColumn":20},{"ruleId":"129","severity":1,"message":"130","line":50,"column":10,"nodeType":"119","messageId":"131","endLine":50,"endColumn":20},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'useEffect' is defined but never used.","'AppContext' is defined but never used.","'Project' is defined but never used.","Parsing error: Expression expected.","'createProject' is defined but never used.","'getAllProjects' is defined but never used.","'getProject' is defined but never used.","@typescript-eslint/no-redeclare","'getProject' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]